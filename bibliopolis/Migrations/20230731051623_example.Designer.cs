// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bibliopolis.Context;

namespace bibliopolis.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230731051623_example")]
    partial class example
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("bibliopolis.Entities.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("ISBN");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("bibliopolis.Entities.Librarian", b =>
                {
                    b.Property<int>("PkLibrarian")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FkRole")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkLibrarian");

                    b.HasIndex("FkRole");

                    b.ToTable("Librarians");
                });

            modelBuilder.Entity("bibliopolis.Entities.Loan", b =>
                {
                    b.Property<int>("PkLoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PkLoan");

                    b.HasIndex("ISBN");

                    b.HasIndex("RegistrationNumber");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("bibliopolis.Entities.Role", b =>
                {
                    b.Property<int>("PkRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkRole");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("bibliopolis.Entities.Student", b =>
                {
                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Career")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RegistrationNumber");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("bibliopolis.Entities.Librarian", b =>
                {
                    b.HasOne("bibliopolis.Entities.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("bibliopolis.Entities.Loan", b =>
                {
                    b.HasOne("bibliopolis.Entities.Book", "Books")
                        .WithMany()
                        .HasForeignKey("ISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bibliopolis.Entities.Student", "Students")
                        .WithMany()
                        .HasForeignKey("RegistrationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
